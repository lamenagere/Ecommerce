
<ul id="dropdown" class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu"></ul>

<script>
    $(document).ready(function () {
        // récupère les catégories sous forme hiérarchisée
        // via un appel à l'API
        $.ajax({
            type: 'GET',
            url: 'http://localhost:1292/category/getcategoryhierarchy/0',
            dataType: 'json',
            traditional: true,
            success: function (data) {
                addItem($('#dropdown'), data);
            }
        });

        // fonction récursive qui créé les éléments associés
        // à chaque categorie
        var addItem = function (parent, categories) {
            $.each(categories, function () {
                let isParent = true;
                if ((!this.subCategories) || (this.subCategories.length == 0)) isParent = false;

                // set id name
                let currentName = getIdName(this);

                // pour chaque catégorie
                // on créé un élément "li"
                // avec son lien associé
                let li = $('<li class="' + getLiClass(isParent) + '" role="menu" id="' + currentName + '">' +
                    '<a href="http://localhost:1292/category/GetProductsByCategory/' + this.id + '" class="' + getLiClass(!isParent) + '"><div>' + this.name + '</div></a></li>');

                // attache la variable "li" à l'élément html parent
                li.appendTo(parent);

                // si la catégorie est mère d'autres catégories
                // on génère un élément "ul" pour afficher les
                // sous-catégories associées et on rappelle la même fonction
                if (isParent) {
                    let ul = $('<ul class="dropdown-menu"></ul>');
                    ul.appendTo(li);
                    addItem(ul, this.subCategories);
                }
            });
        }

        // sert à déterminer un Id pour les tags html
        // à partir du label ("name")
        var getIdName = function (element) {
            return element.name.split(' ').join('').toLowerCase();
        }

        // renvoie une class CSS en fonction de
        // si la catégorie possède des sous-catégories ou non
        function getLiClass(isParent) {
            if (isParent === true) return 'dropdown-submenu';
            return 'dropdown-item';
        }
    });
</script>
